eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    hostname: localhost
  client:
    service-url:
      defaultZone: ${DEFAULT_ZONE:http://localhost:8761/eureka}

customers:
  api:
    url: ${CUSTOMERS_API_URL:http://localhost:8080/api/v1/customers}

products:
  api:
    url: ${PRODUCTS_API_URL:http://localhost:8080/api/v1/products}

spring:
  application:
    name: orders
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/orders
    username: root
    password: root
  mvc:
    locale-resolver: fixed
    locale: pt_BR
  jpa:
    defer-datasource-initialization: 'true'
    show-sql: 'true'
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: 'true'
        boot:
          allow_jdbc_metadata_access: 'false'
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_HOST:localhost:19092}

server:
  port: '0'
topic_name: Orders

management:
  endpoints:
    web:
      exposure:
        include: '*'
    enabled-by-default: 'true'
  endpoint:
    health:
      enabled: 'true'
      show-details: always

springdoc:
  api-docs:
    path: /docs-api
  packagesToScan: com.esand.orders.web.controller
  swagger-ui:
    path: /docs-ui.html

keycloak:
  server-url: http://localhost:8081
  realm: commerce
  client-id: gateway
  client-secret: ouQ51dghJBhO9UIS3WGC1Mz7GRpMK5Tj
  username: auth
  password: 123
